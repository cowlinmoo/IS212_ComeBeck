name: Integration Tests

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  Run-Integration-Tests:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - uses: actions/checkout@v2

      # Set up Docker Compose
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Set up Docker environment variables
      - name: Set up environment variables
        run: |
          echo "CURRENT_ENV=DEV" >> $GITHUB_ENV
          echo "PRODUCTION_DB_USER=${{ secrets.PRODUCTION_DB_USER }}" >> $GITHUB_ENV
          echo "PRODUCTION_DB_PASSWORD=${{ secrets.PRODUCTION_DB_PASSWORD }}" >> $GITHUB_ENV
          echo "PRODUCTION_DB_HOSTNAME=${{ secrets.PRODUCTION_DB_HOSTNAME }}" >> $GITHUB_ENV
          echo "PRODUCTION_DB_PORT=5432" >> $GITHUB_ENV
          echo "PRODUCTION_DB_NAME=${{ secrets.PRODUCTION_DB_NAME }}" >> $GITHUB_ENV
          echo "DATABASE_DIALECT=postgresql" >> $GITHUB_ENV
          echo "DATABASE_HOSTNAME=localhost" >> $GITHUB_ENV
          echo "POSTGRES_DB=spm" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
          echo "DEBUG_MODE=true" >> $GITHUB_ENV
          echo "SMTP_SERVER=smtp.gmail.com" >> $GITHUB_ENV
          echo "SMTP_PORT=587" >> $GITHUB_ENV
          echo "SENDER_EMAIL=${{ secrets.SENDER_EMAIL }}" >> $GITHUB_ENV
          echo "SENDER_PASSWORD=${{ secrets.SENDER_PASSWORD }}" >> $GITHUB_ENV

      # Start Docker Compose with the dev profile
      - name: Start Backend and PostgreSQL services
        run: docker-compose --profile dev up -d

      # Run integration tests
      - name: Run Integration Tests
        env:
          CURRENT_ENV: DEV
          PRODUCTION_DB_USER: ${{ secrets.PRODUCTION_DB_USER }}
          PRODUCTION_DB_PASSWORD: ${{ secrets.PRODUCTION_DB_PASSWORD }}
          PRODUCTION_DB_HOSTNAME: ${{ secrets.PRODUCTION_DB_HOSTNAME }}
          PRODUCTION_DB_PORT: 5432
          PRODUCTION_DB_NAME: ${{ secrets.PRODUCTION_DB_NAME }}
          DATABASE_DIALECT: postgresql
          DATABASE_HOSTNAME: localhost
          POSTGRES_DB: spm
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_PORT: 5432
          DEBUG_MODE: 'true'
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 587
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        run: |
          docker run --rm \
            -e CURRENT_ENV \
            -e PRODUCTION_DB_USER \
            -e PRODUCTION_DB_PASSWORD \
            -e PRODUCTION_DB_HOSTNAME \
            -e PRODUCTION_DB_PORT \
            -e PRODUCTION_DB_NAME \
            -e DATABASE_DIALECT \
            -e DATABASE_HOSTNAME \
            -e POSTGRES_DB \
            -e POSTGRES_USER \
            -e POSTGRES_PASSWORD \
            -e POSTGRES_PORT \
            -e DEBUG_MODE \
            -e SMTP_SERVER \
            -e SMTP_PORT \
            -e SENDER_EMAIL \
            -e SENDER_PASSWORD \
            my-app poetry run pytest tests/ -m "integration" -n auto -v

      # Tear down Docker Compose
      - name: Tear down Docker Compose
        run: docker-compose --profile dev down
